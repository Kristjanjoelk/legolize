//********************************************
//	Alert Core
//********************************************/

// When writing Lego's we use BEM naming conventions.
// Do NOT put any dimensions like font-size/line-height/size/padding/margin etc. into the core Lego unless it's configurable
// The purpose of these Lego's is to have them as trimmed as possible and themed later

/// Naming conventions:
// LegoName
// LegoName--modifierName
// LegoName-descendantName
// LegoName.is-stateOfLego
// Variable names:
// @lego--modifier-property ex: @button--warning-borderColor
// @lego--modifier-descendand-property ex: @listGroup-itemHeading-fontSize

// --- Global ---
// Either use baseline units or pixels for margin/padding/height
@alert-padding: 10px;
@alert-borderRadius: 3px;

// --- Default modifier ---
@alert-border: 1px solid #d8d8d8;
@alert-bgColor: #fff;

@alert-icon-margin: 5px;

// -------------------- Core LEGO --------------------
.Alert() {
	padding: @alert-padding;
	border: @alert-border;
	border-radius: @alert-borderRadius;
	background: @alert-bgColor;
	position: relative;

	//Styling for carets
	&:after,
	&:before {
		border: solid transparent;
		content: " ";
		height: 0;
		width: 0;
		position: absolute;
		pointer-events: none;
	}

	.Media {
		margin: 0;
	}
}

// -------------------- Descendents --------------------

.Alert-content() {
	display:inline-block;
	width:90%;
}

.Alert-header() {
	.Heading {
		margin:12px 0;
	}
}

.Alert-body() {
}

// -------------------- Mixins --------------------

//Creates type variants with colored background
.alertVariant(@borderColor, @bgColor, @borderWidth: 1px) {
	border: @borderWidth solid @borderColor;
	background-color: @bgColor;

	&.Alert--caretTop:before    { border-bottom-color: @borderColor; }
	&.Alert--caretRight:before  { border-left-color:   @borderColor; }
	&.Alert--caretBottom:before { border-top-color:    @borderColor; }
	&.Alert--caretLeft:before   { border-right-color:  @borderColor; }

	&.Alert--caretTop:after    { border-bottom-color: @alert-bgColor; }
	&.Alert--caretRight:after  { border-left-color:   @alert-bgColor; }
	&.Alert--caretBottom:after { border-top-color:    @alert-bgColor; }
	&.Alert--caretLeft:after   { border-right-color:  @alert-bgColor; }
}

//Alert caret variant
.alertCaretVariant(@position1, @position2) {
	&:after,
	&:before {
		@{position1}: 100%;
		@{position2}: 50% - 10px;
	}
	&:before {
		border-@{position1}-color: @alert--default-borderColor;
		margin-@{position2}: -2 * @alert-caretSize;
		border-width: 2 * @alert-caretSize;
	}
	&:after {
		border-@{position1}-color: @alert--default-bgColor;
		margin-@{position2}: -@alert-caretSize;
		border-width: @alert-caretSize;
	}
}